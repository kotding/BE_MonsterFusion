// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonsterFusion_BE.Features.EventConfig;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MonsterFusion_BE.Migrations.AllEventRepositoryMigrations
{
    [DbContext(typeof(AllEventRepository))]
    partial class AllEventRepositoryModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MonsterFusion_BE.Features.EventConfig.AviatorEvent.Entity.AviatorEventData", b =>
                {
                    b.Property<int>("uid_event")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("uid_event"));

                    b.Property<DateTime>("time_expired")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("time_start")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("uid_event");

                    b.ToTable("AviatorEventData");
                });

            modelBuilder.Entity("MonsterFusion_BE.Features.EventConfig.ChristmasEvent.Entity.ChristmasEventData", b =>
                {
                    b.Property<int>("uid_event")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("uid_event"));

                    b.Property<DateTime>("time_expired")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("time_start")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("uid_event");

                    b.ToTable("ChristmasEventData");
                });
#pragma warning restore 612, 618
        }
    }
}
